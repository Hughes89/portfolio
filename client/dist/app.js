"use strict";!function(){angular.module("app",["ui.router"])}(),function(){function e(e,o,t,r){e.state("about",{url:"/",templateUrl:"app/about/about.html",controller:"AboutController",controllerAs:"about"}).state("projects",{url:"/projects",templateUrl:"app/projects/projects.html",controller:"ProjectsController",controllerAs:"projects"}),o.otherwise("/"),t.html5Mode(!0)}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider"]}(),function(){function e(){return{restrict:"AE",replace:!0,scope:!0,templateUrl:"app/navigation/navigation.html"}}angular.module("app").directive("navigation",e)}(),function(){function e(){var e=this;e.projects=window.projects,e.techIcons={Angular:"devicon-angularjs-plain-wordmark",React:"devicon-react-original-wordmark",Node:"devicon-nodejs-plain-wordmark",MySQL:"devicon-mysql-plain-wordmark",MongoDB:"devicon-mongodb-plain-wordmark"}}angular.module("app").controller("ProjectsController",e),e.$inject=[]}(),function(){window.projects=[{title:"Sushiii",img:"https://s6.postimg.org/oahsedkch/Screen_Shot_2017_02_10_at_1_20_59_PM.png",site:"http://sushiii.me/",github:"https://github.com/Hughes89/sushi",description:"Community based portfolio for developers to display projects in a clean and comprehensive way.",tech:["Angular","Node","MySQL"]},{title:"Zeus Reviews",img:"https://s6.postimg.org/rozyuifr5/Screen_Shot_2016_11_23_at_1_34_46_PM.png",site:"http://zeus-reviews.herokuapp.com/",github:"https://github.com/Zeus-HatersGonaHate/Zeus-HatersGonaHate",description:"Website for writing reviews about movies and television shows and interacting with other reviews.",tech:["Angular","Node","MongoDB"]},{title:"Scripty + Dashreactor",img:"https://s6.postimg.org/5w79ae81t/Screen_Shot_2017_02_10_at_1_34_48_PM.png",site:void 0,github:"https://github.com/Hughes89/scripty",description:"Mobile app for learning programming lessons, and a dashboard for admins to update/add/delete lessons.",tech:["React","Node","MongoDB"]},{title:"Jacked Reactor",img:"https://s6.postimg.org/3p30mh2rl/Screen_Shot_2017_02_10_at_1_19_22_PM.png",site:"https://jackedreactor.herokuapp.com/",github:"https://github.com/Hughes89/JackedReactor",description:"Fitness tracking app focused on tracking the userâ€™s strength progression.",tech:["Angular","Node","MongoDB"]}]}(),function(){function e(e){function o(e){e._one.forEach(function(e){var o=new ProgressBar.Line("#"+e.id,{strokeWidth:4,easing:"easeInOut",duration:2500,color:e.color,trailColor:"#8e8e8e",trailWidth:1});o.animate(.01*e.percentage)}),e._two.forEach(function(e){var o=new ProgressBar.Line("#"+e.id,{strokeWidth:4,easing:"easeInOut",duration:2500,color:e.color,trailColor:"#8e8e8e",trailWidth:1});o.animate(.01*e.percentage)})}var t=this;t.skills={},t.skills._one=window.skills.one,t.skills._two=window.skills.two,e(function(){return o(t.skills)})}angular.module("app").controller("AboutController",e),e.$inject=["$timeout"]}(),function(){window.skills={},window.skills.one=[{id:"s1",name:"JavaScript",percentage:95,color:"#ffd248"},{id:"s2",name:"TypeScript",percentage:75,color:"#F79622"},{id:"s3",name:"HTML/CSS",percentage:95,color:"#48A9A6"},{id:"s4",name:"jQeury",percentage:90,color:"#D46271"},{id:"s5",name:"Angular",percentage:90,color:"#6AB083"},{id:"s6",name:"Angular 2",percentage:85,color:"#A4DD80"},{id:"s7",name:"React",percentage:90,color:"#F6B277"},{id:"s8",name:"React Native",percentage:80,color:"#aec5e6"}],window.skills.two=[{id:"s9",name:"Backbone",percentage:65,color:"#6EA4BF"},{id:"s10",name:"Node/Express",percentage:95,color:"#EF767A"},{id:"s11",name:"MongoDB",percentage:95,color:"#FFBA49"},{id:"s12",name:"MySQL",percentage:90,color:"#A1CF6B"},{id:"s13",name:"Git",percentage:95,color:"#FFE066"},{id:"s14",name:"Gulp",percentage:85,color:"#63CCCA"},{id:"s15",name:"Webpack",percentage:85,color:"#4a9ccc"},{id:"s16",name:"Mocha/Chai",percentage:65,color:"#397367"}]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
